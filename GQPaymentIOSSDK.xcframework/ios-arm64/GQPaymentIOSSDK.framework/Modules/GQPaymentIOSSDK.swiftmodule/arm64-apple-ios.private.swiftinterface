// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name GQPaymentIOSSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import CashfreePG
import CashfreePGCoreSDK
import CashfreePGUISDK
import Easebuzz
import Foundation
@_exported import GQPaymentIOSSDK
import Razorpay
import Swift
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol GQPaymentDelegate {
  func gqSuccessResponse(data: [Swift.String : Any]?)
  func gqFailureResponse(data: [Swift.String : Any]?)
  func gqCancelResponse(data: [Swift.String : Any]?)
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class GQPaymentSDK : GQPaymentIOSSDK.GQViewController {
  @_Concurrency.MainActor(unsafe) public var delegate: (any GQPaymentIOSSDK.GQPaymentDelegate)?
  @_Concurrency.MainActor(unsafe) public var clientJSONObject: [Swift.String : Any]?
  @_Concurrency.MainActor(unsafe) public var prefillJSONObject: [Swift.String : Any]?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class GQViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) public func showLoader()
  @_Concurrency.MainActor(unsafe) public func hideLoader()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
